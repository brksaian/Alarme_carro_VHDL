library ieee;
use ieee.std_logic_1164.all;

entity AlarmeCarro is
    port (
        remoto   : in  std_logic;
        sensores : in  std_logic;
        clock    : in  std_logic;
        reset    : in  std_logic;
        sirene   : out std_logic
    );
end entity AlarmeCarro;

architecture Behavioral of AlarmeCarro is
    type Estado is (desarmado, armado, alarme);
    signal estado_atual, estado_proximo : Estado;
begin
    process (clock, reset)
    begin
        if reset = '1' then
            estado_atual <= desarmado;  -- Reset, estado inicial é desarmado
        elsif rising_edge(clock) then
            estado_atual <= estado_proximo;  -- Atualiza o estado atual com o próximo estado
        end if;
    end process;

    process (estado_atual, remoto, sensores)
    begin
        case estado_atual is
            when desarmado =>
                if remoto = '1' then
                    estado_proximo <= armado;  -- Muda para o estado armado quando ocorre remoto='1'
                else
                    estado_proximo <= desarmado;  -- Mantém no estado desarmado
                end if;

            when armado =>
                if sensores = '1' then
                    estado_proximo <= alarme;  -- Muda para o estado alarme quando ocorre sensores='1'
                elsif remoto = '1' then
                    estado_proximo <= desarmado;  -- Muda para o estado desarmado quando ocorre remoto='1'
                else
                    estado_proximo <= armado;  -- Mantém no estado armado
                end if;

            when alarme =>
                estado_proximo <= alarme;  -- Mantém no estado alarme
        end case;
    end process;

    sirene <= '1' when estado_atual = alarme else '0';  -- Ativa a sirene quando no estado alarme
end architecture Behavioral;